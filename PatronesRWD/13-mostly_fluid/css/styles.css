html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
    line-height: 2;
}
h1 {
    font-size: 4rem;
}

h2 {
    font-size: 3.2rem;
}

p {
    font-size: 2rem;
}

.entrada-blog a {
    display: inline-block;
    background-color: #2196F3;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
}

/** CODIGO AQUI **/

.contenedor {
    /* No se recomienda dejar fijo el tamaño dado que al momento de realizar cambios en la pantalla puede que necesitemos hacer scroll, por lo que es mejor dejarlo con porcentajes para que fluya
    width: 1200px;
    */
    width: 95%;
    /* 0 arriba, del lado derecho sera automatico y del lado izquierdo automatico */
    margin: 0 auto;
    max-width: 120rem;
}
/* Toda la vida seran imagenes responsive porque podra fluir bien  */
img {
    width: 100%;
}

/* Poniendo un ejemplo del uso de max width:
En este caso, si el ancho de la ventana del navegador es lo suficientemente grande para acomodar un ancho total de 900px para el elemento hijo, ocupará ese ancho y el espacio restante se distribuirá a ambos lados del elemento dentro del contenedor principal.

Por ejemplo, si el ancho total del contenedor es de 1000px, el elemento hijo ocupará los 900px y habrá 100px de espacio sobrante (50px a la izquierda y 50px a la derecha del elemento hijo) dentro del contenedor. Si el ancho total del contenedor es de 1200px, el elemento hijo aún ocupará 900px, pero habrá 300px de espacio sobrante (150px a la izquierda y 150px a la derecha del elemento hijo) dentro del contenedor. 

Entonces por ese caso es que centra los elementos dado que se distribuye tanto a la derecha como a la izquierda el espacio disponible

Algunas personas utilizqan media queries combinado con max y min width, es una forma de poder hacerlo también


*/